#include <Arduino.h>

byte myDegree[] = {
  B00110,
  B01001,
  B01001,
  B00110,
  B00000,
  B00000,
  B00000,
  B00000
};

byte myPercent[] = {
  B11001,
  B11010,
  B00010,
  B00100,
  B01000,
  B01011,
  B10011,
  B00000
};

byte n1[][8] = {
  {B00000, B00001, B00011, B00111, B01110, B11100, B11000, B00000},
  {B11000, B11000, B11000, B11000, B11000, B11000, B11000, B11000},
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B11000, B11000, B11000, B11000, B11000, B11000, B11000, B00000}
};

byte n2[][8] = {
  {B00111, B01111, B11100, B11000, B00000, B00000, B00000, B00000},
  {B11100, B11110, B00111, B00011, B00011, B00111, B01110, B11100},
  {B00001, B00011, B00111, B01110, B11100, B11111, B11111, B00000},
  {B11000, B10000, B00000, B00000, B00000, B11111, B11111, B00000}
};

byte n3[][8] = {
  {B00111, B01111, B11100, B11000, B00000, B00000, B00111, B00111},
  {B11100, B11110, B00111, B00011, B00011, B00111, B11110, B11100},
  {B00000, B00000, B00000, B11000, B11100, B01111, B00111, B00000},
  {B01110, B00111, B00011, B00011, B00111, B11110, B11100, B00000}
};

byte n4[][8] = {
  {B00000, B00000, B00000, B00000, B00001, B00011, B00111, B01110},
  {B00110, B01110, B11110, B11110, B10110, B00110, B00110, B00110},
  {B11111, B11111, B00000, B00000, B00000, B00000, B00000, B00000},
  {B11111, B11111, B00110, B00110, B00110, B00110, B00110, B00000}
};

byte n5[][8] = {
  {B11111, B11111, B11000, B11000, B11000, B11011, B11111, B11100},
  {B11111, B11111, B00000, B00000, B00000, B11100, B11110, B00111},
  {B00000, B00000, B00000, B11000, B11100, B01111, B00111, B00000},
  {B00011, B00011, B00011, B00011, B00111, B11110, B11100, B00000},
};

byte n6[][8] = {
  {B00000, B00000, B00001, B00011, B00111, B01110, B11111, B11111},
  {B11100, B11000, B10000, B00000, B00000, B00000, B11100, B11110},
  {B11000, B11000, B11000, B11000, B11100, B01111, B00111, B00000},
  {B00011, B00011, B00011, B00011, B00111, B11110, B11100, B00000}
};

byte n7[][8] = {
  {B11111, B11111, B00000, B00000, B00000, B00000, B00000, B00000},
  {B11111, B11111, B00011, B00111, B00110, B01100, B11100, B11000},
  {B00001, B00011, B00011, B00110, B01110, B11100, B11000, B00000},
  {B10000, B00000, B00000, B00000, B00000, B00000, B00000, B00000}
};

byte n8[][8] = {
  {B00111, B01111, B11100, B11000, B11000, B11100, B01111, B00111},
  {B11100, B11110, B00111, B00011, B00011, B00111, B11110, B11100},
  {B01110, B11100, B11000, B11000, B11100, B01111, B00111, B00000},
  {B01110, B00111, B00011, B00011, B00111, B11110, B11100, B00000}
};

byte n9[][8] = {
  {B00111, B01111, B11100, B11000, B11000, B11100, B01111, B00111},
  {B11100, B11110, B00111, B00011, B00011, B00011, B11111, B11111},
  {B00000, B00000, B00001, B00011, B00111, B01110, B01100, B00000},
  {B01110, B11100, B11000, B10000, B00000, B00000, B00000, B00000},
};

byte n0[][8] = {
  {B00111, B01111, B11100, B11000, B11000, B11000, B11000, B11000},
  {B11100, B11110, B00111, B00011, B00011, B00011, B00011, B00011},
  {B11000, B11000, B11000, B11000, B11100, B01111, B00111, B00000},
  {B00011, B00011, B00011, B00011, B00111, B11110, B11100, B00000}
};

byte nS[][8] = {
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000}
};

byte nM[][8] = {
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B00000, B00000, B00000, B00000, B00000, B00000, B00000, B00000},
  {B00111, B00111, B00000, B00000, B00000, B00000, B00000, B00000},
  {B11110, B11110, B00000, B00000, B00000, B00000, B00000, B00000}
};

byte (*getNumberArray(int digit))[8] {
  digit = constrain(digit, 0, 11);
  switch(digit) {
      case 0: return n0;
      case 1: return n1;
      case 2: return n2;
      case 3: return n3;
      case 4: return n4;
      case 5: return n5;
      case 6: return n6;
      case 7: return n7;
      case 8: return n8;
      case 9: return n9;
      case 10: return nS;
      case 11: return nM;
      default: return nS;
  }
}